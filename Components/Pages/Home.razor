@page "/"
@rendermode InteractiveServer

<PageTitle>Celestial Shield</PageTitle>

@using MudBlazor
@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations

<MudText Typo="Typo.h1" Align="Align.Center"><b>Celestial Shield</b></MudText>

<MudContainer MaxWidth="MaxWidth.Large" Style="margin-top:12px;">
    <MudPaper Elevation="0" Class="pa-4">
        <MudNumericField T="double?" Label="Absolute Magnitude" Placeholder="H" Variant="Variant.Outlined" Class="mt-4" />
        <MudNumericField T="double?" Label="Asteroid Diameter" Placeholder="km" Variant="Variant.Outlined" Class="mt-4" />
        <MudNumericField T="double?" Label="Relative Velocity" Placeholder="km/s" Variant="Variant.Outlined" Class="mt-4" />
        <MudNumericField T="double?" Label="Mass" Placeholder="kg" Variant="Variant.Outlined" Class="mt-4" />
        <MudTextField T="string" InputType="InputType.Text" Label="Classification" Placeholder="Value" Variant="Variant.Outlined" Class="mt-4" />

        <MudButton Variant="Variant.Filled" 
                    Color="Color.Dark" 
                    FullWidth="true" 
                    Class="mt-6" 
                    Size="Size.Large"
                    OnClick="GetResults"> 
            Get Results
        </MudButton>
    </MudPaper>
</MudContainer>

<MudText Typo="Typo.subtitle1" Align="Align.Center" Class="mt-4 mb-4">@StatusMessage</MudText>

@* This @if block controls which view is shown. *@
@if (Loading)
{
    <div class="d-flex justify-center mt-4">
        <MudProgressCircular Indeterminate="true" />
    </div>
}
else if (Results != null)
{
    <MudPaper Class="pa-4" Elevation="0">
        <MudTabs Elevation="2" Rounded="true" ApplyEffects="true" PanelClass="pa-6">
            <MudTabPanel Text="Overview">
                <MudGrid Spacing="4">
                    <MudItem xs="12" md="6">
                        <MudCard>
                            <MudCardHeader>
                                <CardHeaderContent>
                                    <MudText Typo="Typo.h6">Approximate Miss Distance</MudText>
                                </CardHeaderContent>
                            </MudCardHeader>
                            <MudCardContent>
                                <MudText Typo="Typo.body2">@(Results.distance)</MudText>
                            </MudCardContent>
                        </MudCard>
                    </MudItem>
                    <MudItem xs="12" md="6">
                        <MudCard>
                            <MudCardHeader>
                                <CardHeaderContent>
                                    <MudText Typo="Typo.h6">Hazardous</MudText>
                                </CardHeaderContent>
                            </MudCardHeader>
                            <MudCardContent>
                                <MudText Typo="Typo.h5">@(Results.hazardous)</MudText>
                            </MudCardContent>
                        </MudCard>
                    </MudItem>
                    <MudItem xs="12" md="6">
                        <MudCard>
                            <MudCardHeader>
                                <CardHeaderContent>
                                    <MudText Typo="Typo.h6">Impact Probability</MudText>
                                </CardHeaderContent>
                            </MudCardHeader>
                            <MudCardContent>
                                <MudText Typo="Typo.body2">@(Results.impact_probability)</MudText>
                            </MudCardContent>
                        </MudCard>
                    </MudItem>
                </MudGrid>
            </MudTabPanel>

            <MudTabPanel Text="Impact">
                <MudGrid Justify="Justify.Center">
                    <MudItem xs="12" sm="10" md="8" lg="6">
                        <MudCard Elevation="3">
                            <MudCardHeader>
                                <CardHeaderContent>
                                    <MudText Typo="Typo.h6">Projected Impact Zone Analysis</MudText>
                                </CardHeaderContent>
                                <CardHeaderActions>
                                    <MudIconButton Icon="@Icons.Material.Filled.Close" Color="Color.Default" />
                                </CardHeaderActions>
                            </MudCardHeader>
                            <MudCardContent>
                                <MudPaper Height="300px" Class="d-flex align-center justify-center mud-theme-dark">
                                                                        <MudText Typo="Typo.h5">Google Maps API Placeholder</MudText>
                                </MudPaper>
                                <MudList T="string" Class="mt-4">
                                    <MudListItem Icon="@Icons.Material.Filled.Public" Text="Color coded by risk" />
                                    <MudListItem Icon="@Icons.Material.Filled.Adjust" Text="Crater size estimates" />
                                    <MudListItem Icon="@Icons.Material.Filled.Vibration" Text="Earthquake equivalent (Richter scale)" />
                                </MudList>
                            </MudCardContent>
                            <MudCardActions>
                                <MudButton Variant="Variant.Text" Color="Color.Primary">Details</MudButton>
                                <MudButton Variant="Variant.Filled" Color="Color.Primary">Run Simulation</MudButton>
                            </MudCardActions>
                        </MudCard>
                    </MudItem>
                </MudGrid>
            </MudTabPanel>

            <MudTabPanel Text="Consequences">
                <MudText Typo="Typo.h4" GutterBottom="true">Environmental Consequences</MudText>
                <MudGrid Spacing="4">
                    <MudItem xs="12" md="4">
                        <MudCard>
                            <MudCardHeader>
                                <CardHeaderContent>
                                    <MudText Typo="Typo.h6">Atmosphere</MudText>
                                </CardHeaderContent>
                            </MudCardHeader>
                            <MudCardContent>
                                <MudText Typo="Typo.body2">Details on the potential for atmospheric dust and aerosol injection, which could lead to an "impact winter" by blocking sunlight and lowering global temperatures.</MudText>
                            </MudCardContent>
                        </MudCard>
                    </MudItem>
                    <MudItem xs="12" md="4">
                        <MudCard>
                            <MudCardHeader>
                                <CardHeaderContent>
                                    <MudText Typo="Typo.h6">Organisms</MudText>
                                </CardHeaderContent>
                            </MudCardHeader>
                            <MudCardContent>
                                <MudText Typo="Typo.body2">Assessment of the impact on global biodiversity, including potential extinction events, ecosystem collapse, and long-term effects on flora and fauna.</MudText>
                            </MudCardContent>
                        </MudCard>
                    </MudItem>
                    <MudItem xs="12" md="4">
                        <MudCard>
                            <MudCardHeader>
                                <CardHeaderContent>
                                    <MudText Typo="Typo.h6">Geological</MudText>
                                </CardHeaderContent>
                            </MudCardHeader>
                            <MudCardContent>
                                <MudText Typo="Typo.body2">Analysis of geological consequences, such as mega-tsunamis from ocean impacts, widespread seismic activity, and the potential for increased volcanism.</MudText>
                            </MudCardContent>
                        </MudCard>
                    </MudItem>
                </MudGrid>
            </MudTabPanel>

            <MudTabPanel Text="Mitigation">
                <MudGrid Spacing="4">
                    <MudItem xs="12" md="6">
                        <MudCard>
                            <MudCardHeader>
                                <CardHeaderContent>
                                    <MudText Typo="Typo.h6">Deflection Strategies</MudText>
                                </CardHeaderContent>
                            </MudCardHeader>
                            <MudCardContent>
                                <MudText Typo="Typo.body2">Primary options include kinetic impactors (like NASA's DART mission), gravity tractors for slow adjustments, and laser ablation to vaporize surface material for thrust.</MudText>
                            </MudCardContent>
                        </MudCard>
                    </MudItem>
                    <MudItem xs="12" md="6">
                        <MudCard>
                            <MudCardHeader>
                                <CardHeaderContent>
                                    <MudText Typo="Typo.h6">Disruption Strategies</MudText>
                                </CardHeaderContent>
                            </MudCardHeader>
                            <MudCardContent>
                                <MudText Typo="Typo.body2">Higher-risk options for short-notice threats, such as using a standoff nuclear device to fracture the asteroid into smaller, less harmful fragments that would mostly burn up in the atmosphere.</MudText>
                            </MudCardContent>
                        </MudCard>
                    </MudItem>
                    <MudItem xs="12">
                        <MudCard>
                            <MudCardHeader>
                                <CardHeaderContent>
                                    <MudText Typo="Typo.h6">Mission Readiness & Timelines</MudText>
                                </CardHeaderContent>
                            </MudCardHeader>
                            <MudCardContent>
                                <MudText Typo="Typo.body2">This section details the current state of readiness for various mitigation technologies. It outlines the minimum lead time required to launch and execute a successful deflection or disruption mission based on the asteroid's trajectory and distance.</MudText>
                            </MudCardContent>
                        </MudCard>
                    </MudItem>
                </MudGrid>
            </MudTabPanel>
        </MudTabs>

        @* <MudContainer Class="d-flex justify-end mt-6 mb-4">
            <MudButton Variant="Variant.Filled" 
                       Color="Color.Secondary" 
                       Size="Size.Large"
                       @onclick="ResetSimulation">
                New Simulation
            </MudButton>
        </MudContainer> *@
    </MudPaper>
}

@code {
    [Microsoft.AspNetCore.Components.Inject]
    public project_celestial_shield.Services.OpenAiService? OpenAi { get; set; }

    [Microsoft.AspNetCore.Components.Inject]
    public Microsoft.Extensions.Logging.ILogger<Home>? Logger { get; set; }

    private project_celestial_shield.Models.Results? Results;
    private bool Loading;
    private string? StatusMessage;

    private async Task GetResults()
    {
        if (OpenAi == null) return;
        Loading = true;
        StatusMessage = "Requesting results...";
        Logger?.LogInformation("Home: Starting GetResults");
        try
        {
            var userPrompt = "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nPredict whether this meteor will hit Earth\n\n### Input:\n{\"magnitude\": 3000, \"diameter\": 2000.66, \"relative_velocity\": 30000}\n\n### Response:\n";

            var functionSchema = new
            {
                name = "create_results_profile",
                description = "Return a results object in strict JSON.",
                parameters = new
                {
                    type = "object",
                    properties = new
                    {
                        distance = new { type = "number" },
                        hazardous = new { type = "boolean" },
                        impact_probability = new { type = "number" },
                    },
                    required = new[] { "hazardous", "impact_probability" }
                }
            };

            Results = await OpenAi.GetStructuredResultAsync<project_celestial_shield.Models.Results>("", userPrompt, functionSchema, model: "qwen3-0.6b-meteor");
            if (Results != null)
            {
                StatusMessage = "Results received";
                Logger?.LogInformation("Home: Received results: {@Results}", Results);
            }
            else
            {
                StatusMessage = "No results returned";
                Logger?.LogWarning("Home: GetStructuredResultAsync returned null");
            }
        }
        catch (Exception ex)
        {
            StatusMessage = $"Error: {ex.Message}";
            Logger?.LogError(ex, "Home: Error getting results");
            throw;
        }
        finally
        {
            Loading = false;
            StateHasChanged();
        }
    }
}
